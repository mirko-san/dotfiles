#!/usr/bin/env zsh

### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
  print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})…%f"
  command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
  command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
    print -P "%F{33} %F{34}Installation successful.%f%b" || \
    print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# initialise completions with ZSH's compinit
autoload -Uz compinit && compinit

### 分割ファイルの読み込み
ZSHHOME="${HOME}/.zsh"

if [ -d $ZSHHOME -a -r $ZSHHOME -a -x $ZSHHOME ]; then
  for i in $ZSHHOME/*; do
    [[ ${i##*/} = *.zsh ]] &&
    [ \( -f $i -o -h $i \) -a -r $i ] && . $i
  done
fi
###

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
  zdharma-continuum/zinit-annex-as-monitor \
  zdharma-continuum/zinit-annex-bin-gem-node \
  zdharma-continuum/zinit-annex-patch-dl \
  zdharma-continuum/zinit-annex-rust

### End of Zinit's installer chunk

### Start original custom
eval "$(starship init zsh)"

if [[ $(uname) == "Darwin" && $(uname -m) == "x86_64" ]]; then
  export AQUA_GLOBAL_CONFIG=${AQUA_GLOBAL_CONFIG:-}:${XDG_CONFIG_HOME:-$HOME/.config}/aquaproj-aqua/aqua.yaml
  export PATH="$(aqua root-dir)/bin:$PATH"

  notify() {
    osascript -e "display notification \"$1\""
  }

  kube_pods() {
    kubectl get pod -o json \
      | jq -r "{ \
          running : [.items[] | select(.status.phase == \"Running\")] | length, \
          total: [.items[] | select(.status.phase == \"Succeeded\" | not)] | length \
        }"
  }

  zinit ice as"program" from"gh-r" \
    mv"jq-* -> jq" \
    pick"jq" \
    bpick"jq-osx-amd64"
  zinit light jqlang/jq

  zinit ice as"program" from"gh-r" \
    pick"fzf" \
    bpick"fzf-*-darwin_amd64.zip"
  zinit light junegunn/fzf

  zinit ice as"program" from"gh-r" \
    pick"kustomize" \
    ver"kustomize/v5.1.1" \
    bpick"kustomize_*_darwin_amd64.tar.gz"
  zinit light kubernetes-sigs/kustomize

  zinit ice as"program" from"gh-r" \
    pick"kubeseal" \
    bpick"kubeseal-*-darwin-amd64.tar.gz"
  zinit light bitnami-labs/sealed-secrets

  zinit ice as"program" from"gh-r" \
    pick"gh_*/bin/gh" \
    bpick"gh_*_macOS_amd64.tar.gz"
  zinit light cli/cli

  zinit ice as"program" from"gh-r" \
    pick"jsonnet" \
    pick"jsonnetfmt" \
    bpick"go-jsonnet_*_Darwin_x86_64.tar.gz"
  zinit light google/go-jsonnet

  zinit ice as"program" from"gh-r" \
    pick"bin/darwin_amd64/kubelogin" \
    bpick"kubelogin-darwin-amd64.zip"
  zinit light Azure/kubelogin

  zinit ice as"program" from"gh-r" \
    mv"sops-* -> sops" \
    pick"sops" \
    bpick"sops-*.darwin.amd64"
  zinit light getsops/sops

  zinit ice as"program" from"gh-r" \
    mv"ghq_darwin_amd64/ghq -> ghq" \
    pick"ghq" \
    bpick"ghq_darwin_amd64.zip"
  zinit light x-motemen/ghq

  zinit ice as"program" from"gh-r" \
    mv"direnv* -> direnv" \
    pick"direnv" \
    bpick"direnv.darwin-amd64"
  zinit light direnv/direnv

  # brew で入れたときの asdf の設定
  . /usr/local/opt/asdf/libexec/asdf.sh

elif [[ $(uname) == "Linux" && $(uname -m) == "x86_64" ]]; then
  zinit ice as"program" from"gh-r" \
    mv"jq-* -> jq" \
    pick"jq" \
    bpick"jq-linux-amd64"
  zinit light jqlang/jq

  zinit ice as"program" from"gh-r" \
    pick"fzf" \
    bpick"fzf-*-linux_amd64.tar.gz"
  zinit light junegunn/fzf

  zinit ice as"program" from"gh-r" \
    pick"kustomize" \
    ver"kustomize/v5.3.0" \
    bpick"kustomize_*_linux_amd64.tar.gz"
  zinit light kubernetes-sigs/kustomize

  zinit ice as"program" from"gh-r" \
    pick"helmfile_*/helmfile" \
    bpick"helmfile*_linux_amd64.tar.gz"
  zinit light helmfile/helmfile

  zinit ice as"program" from"gh-r" \
    pick"gh_*/bin/gh" \
    bpick"gh_*_linux_amd64.tar.gz"
  zinit light cli/cli

  zinit ice as"program" from"gh-r" \
    mv"ghq_linux_amd64/ghq -> ghq" \
    pick"ghq" \
    bpick"ghq_linux_amd64.zip"
  zinit light x-motemen/ghq

  . ~/.asdf/plugins/golang/set-env.zsh
  . /opt/asdf-vm/asdf.sh
  export PATH=$GOPATH/bin:$PATH

  alias docker='podman'
  export DOCKER_HOST="unix://$(podman info --format '{{.Host.RemoteSocket.Path}}')"
fi

# golang が必要
zinit ice as"program" \
  atclone"cd helm" \
  atpull"%atclone" \
  make \
  pick"bin/helm"
zinit light helm/helm

zinit light zsh-users/zsh-completions
zinit light zsh-users/zsh-autosuggestions

zinit load atusy/gh-fzf
zinit load migutw42/zsh-fzf-ghq

export PATH=$HOME/bin:$PATH

alias untar='tar --one-top-level -x -f'

export DENO_INSTALL="/home/mirko/.deno"
export PATH="$DENO_INSTALL/bin:$PATH"

eval "$(direnv hook zsh)"
